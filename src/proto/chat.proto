// services.proto
syntax = "proto3";

package chat;

// The main service for robot-server communication
service chat_service {
  // Initiates a new voice request and returns a unique ID for it
  rpc start_voice_request(start_voice_request_message) returns (request_id_message);

  // Cancels a previously initiated voice request
  rpc cancel_voice_request(request_id_message) returns (empty_message);

  // Initiates facial recognition and returns an ID
  rpc start_facial_recognition(start_facial_recognition_message) returns (request_id_message);
}

// Common messages
message request_id_message {
  string request_id = 1;
}

// Messages for the voice interaction flow
message start_voice_request_message {
  // Unique ID generated by the client to track this request
  string request_id = 1;
  // Optional: language hint from the client
  string language_hint = 2;
}


// Messages for the facial recognition flow
message start_facial_recognition_message {
  string request_id = 1;
}

message facial_recognition_result {
  string request_id = 1;
  string user_name = 2;
  // etc.
}

message empty_message {}